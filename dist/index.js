(function(d,r){typeof exports=="object"&&typeof module<"u"?r(exports):typeof define=="function"&&define.amd?define(["exports"],r):(d=typeof globalThis<"u"?globalThis:d||self,r(d.webcodec_player={}))})(this,function(d){"use strict";class r{constructor(e){this.isSupportedH265=!1,console.log(e);let o;if(typeof e.container=="string"?o=document.querySelector(e.container):o=e.container,!o)throw new Error("WebCodecPlayer need container option");if(o.nodeName==="CANVAS"||o.nodeName==="VIDEO")throw new Error(`WebCodecPlayer container type can not be ${o.nodeName} type`);this.decoder=null,this.isSupportedH265=!1,this.initDecoder()}show(){console.log("hello world")}destroy(){this.decoder&&(this.decoder.state!=="closed"&&this.decoder.close(),this.decoder=null),console.log("Webcodecs","destroy")}initDecoder(){const e=this;this.decoder=new VideoDecoder({output(t){e.handleDecode(t)},error(t){e.handleError(t)}});let o=this;this.isSupportedHevc().then(function(t){o.isSupportedH265=t.supported}),console.log("-----init------")}send(e){const o=new EncodedVideoChunk({timestamp:0,type:"delta",data:e});try{this.decoder.decode(o)}catch(t){console.log("发生异常:"+t)}}handleDecode(e){let o=document.getElementById("myVideo"),t=new MediaStreamTrackGenerator({kind:"video"});o.srcObject=new MediaStream([t]);let n=t.writable.getWriter();document.getElementById("myCanvas").getContext("2d").drawImage(e,0,0),n.write(e)}handleError(e){console.log("Webcodecs","VideoDecoder handleError",e)}isSupportedHevc(){const e={codec:"hev1.1.6.L123.b0",codedWidth:640,codedHeight:480,hardwareAcceleration:"prefer-hardware"};return VideoDecoder.isConfigSupported(e)}}window.GWebCodecPlayer=r,d.WebCodecPlayer=r,Object.defineProperty(d,Symbol.toStringTag,{value:"Module"})});
